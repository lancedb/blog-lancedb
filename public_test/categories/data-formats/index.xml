<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Formats on LanceDB Blog</title><link>https://example.org/categories/data-formats/</link><description>Recent content in Data Formats on LanceDB Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 13 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/categories/data-formats/index.xml" rel="self" type="application/rss+xml"/><item><title>Lance v2: A New Columnar Container Format</title><link>https://example.org/blog/lance-v2/</link><pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate><guid>https://example.org/blog/lance-v2/</guid><description>&lt;h2 id="why-a-new-format">Why a New Format?&lt;/h2>
&lt;p>Lance was invented because readers and writers for existing column formats did not handle AI/ML workloads efficiently. Lance v1 solved some of these problems but still struggles in a number of cases. At the same time, others (&lt;a href="https://github.com/maxi-k/btrblocks">btrblocks&lt;/a>, &lt;a href="https://research.google/pubs/procella-unifying-serving-and-analytical-data-at-youtube/">procella&lt;/a>, &lt;a href="https://github.com/fulcrum-so/vortex">vortex&lt;/a>) have found similar issues with Parquet in their own use cases. I&amp;rsquo;d like to talk about a new format, Lance v2, that will solve these issues, but first let me describe the various use cases we have learned about by working with modern workloads.&lt;/p></description></item></channel></rss>